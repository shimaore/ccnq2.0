# non-loose-route.cfg -- handler for out-of-dialog (non loose-routed) messages
# Copyright (C) 2009  Stephane Alnet
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# -----------------------------------------------------------------
# Out-of-Dialog messages
# -----------------------------------------------------------------

# With local URI

# This code is for a router with local registrar

route[non-loose-route-handler]
{
    xlog("L_DBG","DEBUG -- route(non-loose-route-handler) Out-of-dialog: $rm $ru (Call-ID $ci)");

    sl_send_reply("100", "Trying");

    route(record-route);

    if(is_method("REGISTER"))
    {
      route(register-handler);   # REGISTER message handler
      exit;
    }

    ## --- NAT

    if(is_method("SUBSCRIBE") || is_method("NOTIFY") || is_method("INVITE") || is_method("OPTIONS") )
    {
      route(initial-nat);
    }
    if(is_method("ACK"))
    {
      route(lr-nat);
    }
    if(is_method("BYE") || is_method("CANCEL")|| is_method("PRACK"))
    {
      route(bye-cancel-prack-nat);  # NAT traversal for BYE and CANCEL
    }

    ## --- Media

    if(is_method("BYE") || is_method("CANCEL"))
    {
      route(stop-media-proxy); # End media session
    }

    ## -- Authenticate, methods

    if(is_method("OPTIONS") || is_method("REFER"))
    {
      sl_send_reply("405","Method not allowed");
      exit;
    }

    # Apparently authenticating SUBSCRIBE and NOTIFY isn't very popular.
    if(is_method("SUBSCRIBE"))
    {
      sl_send_reply("500", "Not implemented yet");
      exit;
      # route(forwarder);
      # exit;
    }

    if(is_method("NOTIFY"))
    {
      sl_send_reply("500", "Not implemented yet");
      exit;
      # lookup("location");
      # route(forwarder);
      # exit;
    }

    # All the following ones are in accounting.

    if(is_method("INVITE"))
    {
      route(authenticate);

      route(start-accounting);

      setflag(19); # dlg_flag
      create_dialog();
      route(invite-handler);   # INVITE message handler
      exit;
    }

    if(is_method("ACK"))
    {
      route(start-accounting);

      route(forwarder-progress);   # Route ACK & CANCEL
      exit;
    }

    if(is_method("CANCEL")||is_method("PRACK"))
    {
      route(start-accounting);

      route(forwarder-progress);   # Route ACK/PRACK/CANCEL
      exit;
    }

    if(is_method("BYE"))
    {
      route(start-accounting);

      route(forwarder);   # Route
      exit;
    }

    xlog("L_DBG","DBG -- route(non-loose-route-handler) Unsupported method $rm");
    sl_send_reply("501","Not implemented");
    exit;
}

# With non-local URI

route[non-local-uri-handler]
{
    xlog("L_DBG","DEBUG -- route(non-local-uri-handler) Non-local RURI $ru");

    xlog("L_DBG","DEBUG -- route() Relaying forbidden");
    sl_send_reply("403", "Relaying Forbidden");
    exit;
}
