# generic.modules -- shared modules and configuration
# Copyright (C) 2009  Stephane Alnet
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


## ------- Modules ---------- ##

# -- FIFO --
loadmodule "mi_fifo.so"
modparam("mi_fifo","fifo_name", "/tmp/opensips_fifo")

# -- MySQL --
loadmodule "db_mysql.so"

# -- Flat store --
loadmodule "db_flatstore.so"
# Do not Flush flatstore after each write (not used for CDRs)
modparam("db_flatstore", "flush", 0)

# -- Common --
loadmodule "xlog.so"
loadmodule "sl.so"

loadmodule "tm.so"

# Timeout for Final reply for INVITE after provisional msg (1xx).
# This is e.g. the time we wait for ringing before trying the next route.
modparam("tm", "fr_inv_timer", ${INV_TIMER})
# default is 120
# Same, as an AVP
modparam("tm", "fr_inv_timer_avp", "$(avp(inv_timer))")
# noisy_ctimer: Recommended by Gafachi, probably makes sense in this application
# modparam("tm", "noisy_ctimer", 1)

# For better interaction with broken (pre-3261) devices
modparam("tm", "ruri_matching", 0)
modparam("tm", "via1_matching", 0)


loadmodule "rr.so"
# Workaround for older SIP clients
modparam("rr", "enable_full_lr", 1)


loadmodule "maxfwd.so"
loadmodule "uri.so"
loadmodule "textops.so"

# -- usrloc --
loadmodule "usrloc.so"
# Use usrloc-cl (DB-based)
modparam("usrloc", "db_url",          "${DB_URL}")
modparam("usrloc", "db_mode",         2)
modparam("usrloc", "timer_interval",  60)
modparam("usrloc", "desc_time_order", 1)
modparam("usrloc", "nat_bflag",       6)
modparam("usrloc", "use_domain",      1)

# -- uri_db ---
loadmodule "uri_db.so"
modparam("uri_db", "db_url",          "${DB_URL}")
modparam("uri_db", "use_domain",      1)
modparam("uri_db", "use_uri_table",   0) # use the "subscriber" table

# -- domain --
loadmodule "domain.so"
modparam("domain", "db_url",          "${DB_URL}")
modparam("domain", "domain_table",    "domain")

# -- avpops --
loadmodule "avpops.so"
modparam("avpops", "db_url",          "${DB_URL}")
modparam("avpops", "avp_table",       "avpops")
modparam("avpops", "use_domain",      1)

# -- permissions (allow_trusted) --
loadmodule "permissions.so"
modparam("permissions", "db_url",     "${DB_URL}")
# modparam("permissions", "peer_tag_avp", "$avp(peer_tag_avp)")
# How the permissions module should use SQL for its data
# 0 is "disable cache"
modparam("permissions", "db_mode", 0)
modparam("permissions", "trusted_table", "trusted")

# -- signaling --
loadmodule "signaling.so"

# -- alias_db (alias_db_lookup) --
loadmodule "alias_db.so"
modparam("alias_db", "db_url",     "${DB_URL}")
modparam("alias_db", "use_domain", 1)
modparam("alias_db", "append_branches", 1)
