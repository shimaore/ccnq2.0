# invite-inbound-proxy.cfg -- INVITE handler for an inbound-proxy
# Copyright (C) 2009  Stephane Alnet
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# -----------------------------------------------------------------
# INVITE Message Handler
# -----------------------------------------------------------------

route[invite-handler]
{
    xlog("L_DBG","DEBUG -- route(invite-handler) $ru -- INVITE Message Handler");

    sl_send_reply("100", "Trying");

    t_on_failure("1");
    t_on_reply("1");

    xlog("L_DBG","DEBUG -- route(invite-handler): From ip: $si - From URI: $fu");

    # Account headers
    avp_delete("$(avp(account))");
    avp_delete("$(avp(account_sub))");

    # The per-DID account information take precedence ...
    if(avp_db_load("$ru","$(avp(number_account))")) {
      $avp(account) = $avp(number_account);
      if(avp_db_load("$ru","$(avp(number_account_sub))")) {
        $avp(account_sub)= $avp(number_account_sub);
      }
    } else {
      # ... over the per-subscriber/endpoint account information.
      if(avp_db_load("$(avp(dst_subs))","$(avp(account))")) {
        avp_db_load("$(avp(dst_subs))","$(avp(account_sub))");
      }
    }
    #/ Account headers

    # XXX Need to be able to route based on:
    # - calling number + called number
    # - called number
    # - calling number
    # Also MUST provide account information (account and account_sub).
    # The following does not accomplish this (yet).
    $(avp(src_type)) = "PSTN";
    route(try-line-side);

    # Invalid destination
    sl_send_reply("404", "User Not Found");
    exit;
}
