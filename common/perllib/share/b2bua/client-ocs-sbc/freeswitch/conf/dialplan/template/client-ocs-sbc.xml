<?xml version="1.0" encoding="utf-8"?>
<include>

  <!-- egress: from OCS to the rest of the world -->
  <context name="egress-ocs">

    <extension name="unloop">
      <condition field="${unroll_loops}" expression="^true$"/>
      <condition field="${sip_looped_call}" expression="^true$">
        <action application="deflect" data="${destination_number}"/>
      </condition>
    </extension>

    <extension name="cleanup-sdp" continue="true">
      <condition field="destination_number" expression="^call"/>
      <condition field="${switch_r_sdp}" expression="/(.*)(a=rtpmap:\d+ SIREN)(.*)/s" break="never">
          <action application="respond" data="488"/>
      </condition>
    </extension>

    <extension name="cleanup-caller-id" continue="true">
      <condition field="caller_id_number" expression="^\+?([1-9][0-9]+)">
        <action application="set" data="ccnq_from_e164=$1"/>
      </condition>
    </extension>

    <extension name="cleanup-called">
      <condition field="destination_number" expression="^\+?([1-9][0-9]+)">
        <action application="set" data="ccnq_to_e164=$1"/>
        <action application="transfer" data="call"/>
      </condition>
    </extension>

    <!-- Place the call -->
    <extension name="place-call">
      <condition field="destination_number" expression="^call$"/>
      <condition field="${ccnq_from_e164}" expression="."/> <!-- Must be non-empty -->
      <condition field="${ccnq_to_e164}" expression="."> <!-- Must be non-empty -->
        <action application="ring_ready"/>
        <action application="set" data="ccnq_direction=egress"/>
        <action application="set" data="progress_timeout=12"/>
        <action application="set" data="ccnq_account=${regex(${sip_req_params}|account=([^;]*)|%1)}"/>
        <action application="set" data="ccnq_account_sub=${regex(${sip_req_params}|account_sub=([^;]*)|%1)}"/>
        <action application="set" data="effective_caller_id_number=${ccnq_from_e164}"/>
        <action application="bridge" data="sofia/sbc-$${profile_name}/+${ccnq_to_e164}@$${egress_target};source=${sip_received_ip}"/>
      </condition>
    </extension>

    <!-- invalid number -->
    <extension name="invalid-number">
      <condition field="destination_number" expression="">
        <action application="hangup" data="INVALID_NUMBER_FORMAT"/>
      </condition>
    </extension>

  </context>

  <!-- ingress: from the rest of the world to OCS -->
  <context name="ingress-ocs">

<!--
    <extension name="unloop">
      <condition field="${unroll_loops}" expression="^true$"/>
      <condition field="${sip_looped_call}" expression="^true$">
        <action application="deflect" data="${destination_number}"/>
      </condition>
    </extension>
-->

    <!-- billing data -->
    <extension name="save" continue="true">
      <condition field="destination_number" expression="^call">
        <anti-action application="set" data="ccnq_from_e164=${caller_id_number}"/>
        <anti-action application="set" data="ccnq_account=${regex(${sip_req_params}|account=([^;]*)|%1)}"/>
        <anti-action application="set" data="ccnq_account_sub=${regex(${sip_req_params}|account_sub=([^;]*)|%1)}"/>
      </condition>
    </extension>

    <extension name="cleanup-sdp" continue="true">
      <condition field="destination_number" expression="^call"/>
      <condition field="${switch_r_sdp}" expression="/(.*)(m=audio \d+ RTP\/AVP)([ \d]+)(.*)/s" break="never">
          <action application="set" data="switch_r_sdp=$1$2 0 8 101$4"/>
      </condition>
    </extension>

    <extension name="cleanup-caller-id" continue="true">
      <condition field="destination_number" expression="^call"/>
      <condition field="caller_id_number" expression="^([1-9][0-9]+)$">
        <action application="set" data="effective_caller_id_number=+$1"/>
      </condition>
    </extension>

    <extension name="cleanup-called">
      <condition field="destination_number" expression="^([1-9][0-9]*)-(.*)$">
        <action application="set" data="ccnq_to_e164=$1"/>
        <action application="set" data="ingress_target=$2"/>
        <action application="transfer" data="call-+$1"/>
      </condition>
    </extension>

    <!-- Place the call -->
    <extension name="default-ingress">
      <condition field="destination_number" expression="^call-(.*)$">
        <action application="set" data="ccnq_direction=ingress"/>
        <action application="set" data="progress_timeout=12"/>
        <action application="set" data="force_transfer_context=refer-ocs"/>
        <action application="bridge" data="sofia/internal-$${profile_name}/$1@${ingress_target};transport=tcp"/>
      </condition>
    </extension>

    <!-- invalid number -->
    <extension name="invalid-number">
      <condition field="destination_number" expression="">
        <action application="hangup"/>
      </condition>
    </extension>

  </context>

  <!-- ingress + REFER -->
  <context name="refer-ocs">

    <extension name="unloop">
      <condition field="${unroll_loops}" expression="^true$"/>
      <condition field="${sip_looped_call}" expression="^true$">
        <action application="deflect" data="${destination_number}"/>
      </condition>
    </extension>

    <extension name="refer-block">
      <!-- do not accept REFER pointing to the destination_number at the local domain -->
      <condition field="${sip_refer_to}">
       <expression><![CDATA[<sip:${destination_number}@${domain_name}]]></expression>
      </condition>
    </extension>

    <extension name="refer">
      <condition field="${sip_refer_to}">
        <expression><![CDATA[<sip:(.*)@(.*)>]]></expression>
        <action application="set" data="refer_user=$1"/>
        <action application="set" data="refer_domain=$2"/>
        <action application="bridge" data="sofia/internal-$${profile_name}/${refer_user}@${refer_domain}"/>
      </condition>
    </extension>
  </context>

</include>
