Emergency handling:
- store address data in the provisioning database
- if insertion is needed, it's done on the customer side (e.g. wholesale-proxy) in a specific header (e.g. X-CCNQ-Emergency-Tag)
- transformation is done in the customer side SBC (e.g. wholesale-proxy-sbc) using country-specific rules + tag provided by proxy
- then outbound routing only has to route the prefix to the proper destination


CCNQ::Portal::E911::
  get_locations($cdb,$account)
  get_endpoint($cdb,$account,$number)
  update_endpoint($cdb,$account,$number,$location_key)
  validate_address($address)
  create_location($cdb,$account,$main_number,$location_name,$address)
  update_endpoint($cdb,$account,$main_number,$location_key)

use constant FLD_VALIDATE => [
  street_number => { label => 'Number', default => '', size=>5, maxlength=>10, required => 1, nonewline => 1 },
  street_name   => { label => 'Street', default => '', required => 1, size => 50, maxlength=>60 },
  address_type  => { label => 'Optional', values => [sort values %{enumLocationDescription()}], nonewline=>1 },
  address_type_number  => { label => 'Number', default => '', size=>15, maxlength=>60 },
  city          => { label => 'City', default => '', required => 1, nonewline => 1  },
  state         => { label => 'State', default => '', size => 2, maxlength=>2, required => 1, nonewline => 1 },
  zip_code      => { label => 'ZIP Code', default => '', size => 11, maxlength=>11, required => 1, nonewline => 1 },
  country       => { label => 'Country', values => ['USA','CAN'], default => 'USA', required => 1, size => 3  },
];
