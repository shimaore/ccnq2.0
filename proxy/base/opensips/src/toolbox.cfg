# toolbox.cfg -- misc routines
# Copyright (C) 2009  Stephane Alnet
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

route[initialize]
{
  # Group 1 is actually a list of black-listed IP addresses or blocks.
  if(allow_source_address("1"))
  {
    sl_send_reply("100", "Trying");
    sl_send_reply("503", "Service Unavailable");
    exit;
  }

  xlog("L_DBG","DEBUG -- Received from $si with flags $mf: $mb");

  # -----------------------------------------------------------------
  # Sanity Check Section
  # -----------------------------------------------------------------
  if (!mf_process_maxfwd_header("${MAX_HOPS}"))
  {
    xlog("L_DBG","DEBUG -- Too Many Hops: $rm From: $fu To: $tu");
    if( !is_method("ACK") )
    {
      sl_send_reply("483", "Too Many Hops");
    };
    exit;
  };

  if (msg:len > max_len)
  {
    xlog("L_DBG","INFO -- Message Overflow: $rm From: $fu To: $tu");
    if( !is_method("ACK") ) {
      sl_send_reply("513", "Message Overflow");
    };
    exit;
  };
}

route[build-account-headers] {
  if($(avp(account))) {
     add_uri_param("account=$(avp(account))");
    if($(avp(account_sub))) {
      add_uri_param("account_sub=$(avp(account))");
    }
  }
}
