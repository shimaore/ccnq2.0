route[route-invite]
{
  # NANPA-specific number normalization
  if(${NANPA})
  {
      # Rewrite the destination number from NXXXXXX into NPANXXXXXX
      # using the "default" NPA of the caller.
      if( $rU =~ "^[2-9][0-9][0-9][0-9][0-9][0-9][0-9]$")
      {
          # Attempt to load the NPA using the From: username.
          if( ! avp_db_load("$(avp(src_subs))","$(avp(default_npa))") )
          {
              xlog("L_ERR", "ERROR -- route(3): no default NPA AVP for $(avp(src_subs)).");
              sl_send_reply("504", "Internal server error, no default NPA");
              exit;
          }

          prefix("$(avp(default_npa))");
      }

      # Normalize ten digits numbers into "1"+10.
      if( $rU =~ "^[2-9][0-9][0-9][2-9][0-9][0-9][0-9][0-9][0-9][0-9]$" )
      {
          prefix("1");
      }

      # Route emergencies
      if( $rU == "911" || $rU == "1911" )
      {
          $(avp(gwadv)) = '911A';
          if( route(28) )
          {
              route(4);   # Start MP if needed
              route(1);   # Forward
              return;
          }
          else
          {
              xlog("L_DBG", "INFO -- route(3): No target ip:port for $(avp(gwadv)).");
          }
          # Fallback to aliases
      }

      # Route operator
      if( $rU == "0" || $rU == "10" )
      {
          $(avp(gwadv)) = '100A';
          if( route(28) )
          {
              route(4);   # Start MP if needed
              route(1);   # Forward
              return;
          }
          else
          {
              xlog("L_DBG", "INFO -- route(3): No target ip:port for $(avp(gwadv)).");
          }
          # Fallback to aliases
      }

      # Route 411
      if( $rU == "411" || $rU == "1411" )
      {
          $(avp(gwadv)) = '411A';
          if( route(28) )
          {
              route(4);   # Start MP if needed
              route(1);   # Forward
              return;
          }
          else
          {
              xlog("L_DBG", "INFO -- route(3): No target ip:port for $(avp(gwadv)).");
          }
          # Fallback to aliases
      }

      if( $rU =~ "^011" )
      {
          # Remove the '011' prefix
          strip(3);
          $(avp(dst_type)) = "INTL";
      }
  }
  # /NANPA-specific

  # E.164
  if( $rU =~ "^\+" )
  {
      $(avp(dst_type)) = "INTL";
      strip(1);
  }
  # /E.164
  # At this point the URI Username has been normalized to
  # an E.164 number without a + sign.
}

route[mid-route-invite]
{
  # Call is OK to proceed (based on the information of the originator).
  xlog("L_DBG","DEBUG -- route(3): Lookup aliases.");

  # Always trust aliases and proceed as-is with them.
  if(lookup("aliases"))
  {
      $(avp(dst_type)) = 'ALIAS';
      route(4);   # Start MP if needed
      route(1);
      exit;
  }

  xlog("L_DBG","DEBUG -- route(3) Now routing RURI: $ru (From: $fu To: $tu)");

  # Note: is_uri_host_local() is in "domain.so" and uses the SQL table "domain"
  if (!is_uri_host_local())
  {
      # Default: do not relay
      xlog("L_INFO","INFO -- route(3): Ignoring Non-local RURI $ru");
      sl_send_reply("403", "Relaying denied");
      exit;
  }

  # Proceed with locating the target

  
}
