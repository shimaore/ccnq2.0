# routing-trunkside-transparent.cfg -- routing toward trunkside for transparent router
# Copyright (C) 2009  Stephane Alnet
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Routing trunk-side with no number rewriting
route[try-trunk-side]
{
  # Now routing towards trunk-side.
  xlog("L_DBG","DEBUG -- route(invite-handler) Now routing towards trunk-side");

  # We do not allow trunk-to-trunk calls.
  if( $(avp(src_type)) == "PSTN" )
  {
      xlog("L_INFO","INFO -- route(invite-handler): Trunk-to-trunk calls are not allowed.");
      # Failure (was 403)
      sl_send_reply("404", "Trunk-to-trunk calls are not allowed");
      exit;
  }

  # Classification

  # Authorization

  # Routing

  ## XXX Starting here is the piece that will need to be replaced with DROUTING ##

  # Source-based routing
  # See if a $fU-based route exists and if so, use R${outbound_route} as the target.
  xlog("L_DBG","DEBUG -- route(invite-handler): Attempting outbound_route for $fU");
  if( avp_db_load("$fU","$avp(outbound_route)") )
  {
      xlog("L_DBG","DEBUG -- route(invite-handler): outbound_route $avp(outbound_route) was selected");
      $(avp(gwadv)) = "R" + $(avp(outbound_route)) + "A";
      if( !route(trunk-side-invite) )
      {
          sl_send_reply("504", "Could not route calling number");
          exit;
      }
  }
  else
  # Destination-based routing
  {
      # Extract the first 6 digits+"A" of the destination number.
      $(avp(gwadv)) = "+" + $(rU{s.substr,0,6}) + "A";
      if( ! route(trunk-side-invite) )
      {
          # Extract the first 3 digits+"A" of the destination number.
          $(avp(gwadv)) = "+" + $(rU{s.substr,0,3}) + "A";

          if( ! route(trunk-side-invite) )
          {
              $(avp(gwadv)) = "+A";

              if( ! route(trunk-side-invite) )
              {
                  sl_send_reply("504", "Missing routing information");
                  exit;
              }
          }
      }
  }

  route(update-media-proxy);   # Start MP if needed
  route(forwarder);   # Forward
  return;
}