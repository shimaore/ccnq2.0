# invite.modules -- modules and configuration shared by all forwarding INVITE modules
# Copyright (C) 2009  Stephane Alnet
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

#
# This code is only used by recipes where we forward the INVITE.
# If the INVITE is terminated locally (e.g. with a 302/404 pair)
# then there is no need to use this code in a recipe.
#

#ifnotdef SKIP_UAC_AUTH
branch_route[1]
{
    xlog("L_DBG","DEBUG -- branch_route(forwarder) Processing $rm $ru");

    xlog("L_DBG","DEBUG -- branch_route(forwarder) Routing tgw $(avp(tgw))");

    # Modify the RURI to use the new target.
    $ru = "sip:" + $rU + "@" + $(avp(tgw));

    # Per-provider authentication
    avp_db_load("$(avp(tgw))","$(avp(uac_realm))"); # Must match the realm sent by the remote end
    avp_db_load("$(avp(tgw))","$(avp(uac_user))");
    avp_db_load("$(avp(tgw))","$(avp(uac_pass))");
}
#endifnotdef SKIP_UAC_AUTH

onreply_route[1]
{
  xlog("L_DBG","DEBUG -- onreply_route(forwarder) Received from $si with flags $mf: $mb");
  xlog("L_DBG","DEBUG -- onreply_route(forwarder) $rs $rr");

  # In-progress flag
  if( t_check_status("[12][0-9][0-9]") )
  {
      setbflag(18);
  }

  route(media-proxy-reply-handler); # MP on-reply
  route(onreply-nat); # NAT on-reply
}
