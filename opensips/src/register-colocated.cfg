# -----------------------------------------------------------------
# REGISTER Message Handler: Router and registrar co-located
# -----------------------------------------------------------------

# Router and registrar are co-located

route[record-route]
{
  # REGISTER messages are processed locally.
  # For all other messages, make sure we stay in the path.
  if ( !is_method("REGISTER") )
  {
    record_route();
  };
}

route[register-handler]
{
    xlog("L_DBG","DEBUG -- route(register-handler): REGISTER Message Handler from $source_uri");

    route(register-nat);

    if(!allow_trusted())
    {
      route(authenticate_register);

      if (!check_to())
      {
        xlog("L_WARN", "WARNING -- route(register-handler): Rogue device $si ($fu) attempts to register");
        sl_send_reply("401", "Unauthorized");
        exit;
      };
    }

    if( save("location","0x02") )
    {
        sl_send_reply("200", "OK");
    }
    else
    {
        xlog("L_ERR", "ERROR -- route(register-handler): could not save location $si ($fu).");
        sl_send_reply("500", "Could not save location");
    }
    exit;
}

# Co-located

route[lookup]
{
  lookup("location");
  switch ($retcode) {
      # No contact found
      case -1:
      # Contact found, method not supported.
      case -2:
      # Internal error
      case -3:
          if( $(avp(cfnr)) )
          {
              $ru = $(avp(cfnr));
          }
          else
          {
              if( avp_db_load("$(avp(dst_subs))","$(avp(user_srv))") )
              {
                  $ru = "sip:" + $var(a) + "@" + $(avp(user_srv));
                  setport("0");
              }
              else
              if( avp_db_load("$(avp(dst_subs))","$(avp(user_ip))") )
              {
                  $ru = "sip:" + $var(a) + "@" + $(avp(user_ip));
                  if( avp_db_load("$(avp(dst_subs))","$(avp(user_port))") )
                  {
                      $ru = "sip:" + $var(a) + "@" + $(avp(user_ip)) + ":" + $(avp(user_port));
                  }
              }
              else
              {
                  sl_send_reply("404", "Not Found");
                  exit;
              }
              if( avp_db_load("$(avp(dst_subs))","$(avp(strip_digit))") )
              {
                strip(1);
              }
          }
      break;
  };
}