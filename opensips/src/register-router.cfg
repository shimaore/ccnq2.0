# -----------------------------------------------------------------
# REGISTER Message Handler: Router for a remote registrar
# -----------------------------------------------------------------

# Router for a remote registrar

route[record-route]
{
  # No message are terminated locally.
  record_route();
}

route[register-handler]
{
  xlog("L_DBG","DEBUG -- route(register-handler): REGISTER Message Handler from $source_uri [register-router]");

  route(register-nat);

  if(!allow_trusted())
  {
    route(authenticate_register);

    if (!check_to())
    {
      xlog("L_WARN", "WARNING -- route(register-handler): Rogue device $si ($fu) attempts to register");
      sl_send_reply("401", "Unauthorized");
      exit;
    };
  }

  # Save the information for the registrar
  add_sock_hdr("Sock-Info");
  # See also http://www.opensips.org/html/docs/modules/1.4.x/nat_traversal.html#id270203
  # XXX save information about NAT (i.e. flags)

  # Forward to the registrar
  t_relay(...); # required for nat_keepalive() to work, see http://www.opensips.org/html/docs/modules/1.5.x/nat_traversal.html
}

route[lookup]
{
  # Send to the registrar for resolution
  # The registrar will reply either with 302 or 404, which will be
  # handled by failure_route[] in the router.
}

