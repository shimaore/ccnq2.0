# routing-lineside.cfg -- INVITE handler for line-side (customer) termination
# Copyright (C) 2009  Stephane Alnet
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

route[try-line-side]
{
  xlog("L_DBG","DEBUG -- route(try-line-side): Attempting to locate $rU");
  # Attempt to find a local number first (line-side).
  if( avp_db_load("$rU","$(avp(dst_subs))") )
  {
      $(avp(dst_type)) = "ONNET";
      avp_db_load("$rU","$(avp(dst_domain))");

      avp_db_load("$rU","$(avp(cfa))");
      avp_db_load("$rU","$(avp(cfb))");
      avp_db_load("$rU","$(avp(cfda))");
      avp_db_load("$rU","$(avp(cfnr))");
      avp_db_load("$rU","$(avp(inv_timer))");

      # Now we switch to the target domain.
      xlog("L_DBG","DEBUG -- route(try-line-side): Switching to target domain $(avp(dst_domain))");
      $rd = $(avp(dst_domain));
      $rp = ""; # Clear port

      avp_db_load("$(avp(dst_subs))","$(avp(account))");

      xlog("L_DBG","DEBUG -- route(invite-handler): dst_subs: $(avp(dst_subs)) account: $(avp(account))");

      # Note: flag 16 prevents sending twice (in the unlikely event that both
      #       caller and callee need to be recorded).
      if( (! isflagset(16))
          && avp_db_load("$(avp(dst_subs))","$(avp(user_recording))") )
      {
          xlog("L_DBG","DEBUG -- route(invite-handler): Recording at $(avp(user_recording))");
          setflag(16);
          $(avp(dest_domain)) = $(avp(user_recording));
      }

      xlog("L_DBG","DEBUG -- route(invite-handler): dst_subs: $(avp(dst_subs)) user_force_mp ?");

      if( avp_db_load("$(avp(dst_subs))","$(avp(user_force_mp))") )
      {
          xlog("L_DBG","DEBUG -- route(invite-handler): Force MediaProxy for $(avp(dst_subs))");
          setflag(6); # force MP for callee
          add_rr_param(";mp=yes");
      }

      xlog("L_DBG","DEBUG -- route(invite-handler): dst_subs: $(avp(dst_subs)) src_type: $(avp(src_type))");

      # Coming from a phone that is allowed local calling
      if($(avp(src_type)) == "ONNET" && avp_db_load("$(avp(src_subs))","$(avp(allow_local))"))
      {
          route(line-side-invite); # Route towards line-side
          exit;
      }

      # Coming from the PSTN
      if($(avp(src_type)) == "PSTN")
      {
          route(line-side-invite); # Route towards line-side
          exit;
      }

      # Failure
      xlog("L_DBG","DEBUG -- route(invite-handler): dst_subs: $(avp(dst_subs)) call cannot be completed");
      sl_send_reply("404", "Call cannot be completed");
      exit;
  }
}