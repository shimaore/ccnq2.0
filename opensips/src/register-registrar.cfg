# -----------------------------------------------------------------
# REGISTER Message Handler: Registrar for a remote router
# -----------------------------------------------------------------

# Registrar for a remote router

route[record-route]
{
  # No record_route needed
}

route[register-handler]
{
  # Message comes from another registrar
  # For a registrar, the trusted table should list other registrars in the cluster.
  if(!allow_trusted())
  {
    # If not coming from another registrar in the cluster, authenticate
    route(authenticate_register);
    if (!check_to())
    {
      xlog("L_WARN", "WARNING -- route(register-handler): Rogue device $si ($fu) attempts to register");
      sl_send_reply("401", "Unauthorized");
      exit;
    };
    setflag(20);
  }

  # Get the information from the router
  set_flag(18); # sock_flag
  # Set the local flags, etc. from the headers
  
  # Save the information
  if( !save("location") )
  {
    xlog("L_ERR", "ERROR -- route(register-handler): could not save location $si ($fu).");
    sl_send_reply("500", "Could not save location");
    exit;
  }

  # If not coming from another registrar in the cluster, forward to the other registrars in the cluster
  if(isflagset(20)) {
    t_replicate(...)
    append_branch();
    t_on_failure...
  }
}
