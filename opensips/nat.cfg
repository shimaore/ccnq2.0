# -----------------------------------------------------------------
# NAT Traversal Section
# -----------------------------------------------------------------

route[23]
{
    xlog("L_DBG","DEBUG -- route(23) -- NAT traversal for BYE/CANCEL/PRACK");

    # NAT test 1 = RFC1918 IP in Contact ?
    # NAT test 2 = From address != 1st Via ?
    if (client_nat_test("3"))
    {
        xlog("L_DBG","DEBUG -- route(23) -- $rm client is behind NAT");
        force_rport();
        fix_contact();
    };
}

route[lr-nat]
{
  # Handle NAT on re-INVITE or LR ACK
  if( is_method("INVITE") || is_method("ACK") )
  {
      xlog("L_DBG","DEBUG -- route(5): Testing NAT on re-INVITE or LR ACK");
      # NAT test 1 = RFC1918 IP in Contact ?
      # NAT test 2 = From address != 1st Via
      if( client_nat_test("3") )
      {
          xlog("L_DBG","DEBUG -- route(5): originator is NATed");
          route(12);
      }

      route(4);   # Update media session if needed
  }
}

route[11]
{
  xlog("L_DBG","DEBUG -- route(12) -- NAT tets for INVITE");
  # NAT tests:
  # NAT test 1 = RFC1918 IP in Contact ?
  # NAT test 2 = From address != 1st Via
  if (client_nat_test("3") && !search("^Record-Route:"))
  {
      # Trusted nodes should never be behind NAT (they can't be trusted if that's the case).
      if(allow_trusted()) # see authenticate.cfg: IP-based authentication
      {
          xlog("L_ERR","ERROR -- route(3): Trusted caller $si ($fu) is behind NAT.");
          sl_send_reply("100", "It appears you are located behind NAT. Media issues may appear.");
      }
      else
      {
          xlog("L_DBG","DEBUG -- route(3): Caller is NATed");
          route(12);
      }
  }
}

route[12]
{
    xlog("L_DBG","DEBUG -- route(12) -- NAT traversal for INVITE/ACK");
    setflag(7); # caller is NATed: force MP
    add_rr_param(";mp=yes");
    force_rport();
    fix_contact(); # version from MediaProxy: handles asymmetric clients
    if(proto==UDP)
    {
      nat_keepalive();
    }
}

route[register-nat]
{
  # NAT test 1 = RFC1918 IP in Contact ?
  # NAT test 2 = From address != 1st Via ?
  # NAT test 4 = RFC1918 in top Via ?
  if (client_nat_test("7") && !search("^Contact:[ ]*\*"))
  {
      xlog("L_DBG","DEBUG -- route(2): Registering device is NATed");
      setbflag(6); # endpoint is NATed (stored in the database by registrar)
      if(proto==UDP)
      {
        nat_keepalive();
      }
      force_rport();
      $avp(nathelper) = $source_uri;
  };
}

route[onreply-nat]
{
      # NAT test 1 = RFC1918 IP in Contact ?
      if( client_nat_test("1") )
      {
  #        nat_keepalive();
          fix_contact();
      }
}
