<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<document type="freeswitch/xml">
  <section name="dialplan" description="dialplan reply">
<erl>

%% dialplan.yaws -- Yaws script to proxy FreeSwitch xml_curl queries for CouchDb.
%% Copyright (C) 2009  Stephane Alnet
%%
%% This program is free software: you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation, either version 3 of the License, or
%% (at your option) any later version.
%%
%% This program is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%% GNU General Public License for more details.
%%
%% You should have received a copy of the GNU General Public License
%% along with this program.  If not, see <http://www.gnu.org/licenses/>.

%% DEPLOY AS https://db1.${__DOMAIN__}/dialplan.yaws
%% i.e. /usr/share/yaws/dialplan.yaws

out(A) ->

  Timeout = 500,

  %% We accept GET and POST (FS uses POST)
  case Q1 = queryvar(A,"Hunt-Context") of
    {ok, Context} ->
      {ok, Number } = queryvar(A,"Hunt-Destination-Number");
    _ ->
      {ok, Context} = postvar(A,"Hunt-Context"),
      {ok, Number } = postvar(A,"Hunt-Destination-Number")
  end,

  Key = yaws_api:url_encode("\"" ++ Number ++ "@" ++ Context ++ "\""),

  %% Query CouchDb
  Requestor = self(),

  spawn(fun() -> 
    Requestor ! ecouch:doc_get("dialplan", "_view/freeswitch/xml?key=" ++ Key)
  end),

  receive
    {ok, Json } ->
      %% Find the rows in the JSON reply
      { ok, Rows } = rfc4627:get_field(Json,"rows"),
      %% Concatenate the JSON "value" field in all the rows.
      Result = lists:flatten(lists:map(fun(Row) ->
          { ok, Entry } = rfc4627:get_field(Row,"value"), binary_to_list(Entry)
        end,Rows)),
      case Result of
        [] ->
          %% No results found, ask FS to fallback to file-based XML
          [{status,404}]; 
        _ ->
          {content,"text/xml",Result}
      end;
    _ ->
      [{status,503}]  %% Service Unavailable
  after Timeout ->
      [{status,504}]  %% Gateway Timeout
  end.

</erl>
  </section>
</document>
