# Copyright (C) 2009  Stephane Alnet
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

These instructions are for Debian/Lenny.


Here I am assuming you use sudo to gain root access.

* Update apt's sources.list to import testing (needed for some packages on the API and MediaProxy servers):

  cat <<EOT | sudo tee -a /etc/apt/sources.list > /dev/null
# Testing packages required for Erlang/CouchDB, MediaProxy
deb     http://ftp.us.debian.org/debian/   testing main contrib
EOT
  cat <<EOT | sudo tee /etc/apt/preferences > /dev/null
# Install Debian/Lenny packages by default
Package: *
Pin: release a=lenny
Pin-Priority: 700

# Although testing is available, do not attempt to automatically upgrade to it.
Package: *
Pin: release a=testing
Pin-Priority: -1
EOT

  sudo aptitude update
  sudo aptitude dist-upgrade

* On all servers, install the program:

  sudo aptitude update
  sudo aptitude -y install libjson-perl libnet-libidn-perl libauthen-sasl-perl libxml-writer-perl libwww-perl libyaml-perl libexpat-dev liblogger-syslog-perl libio-stringy-perl git-core libnet-ssleay-perl build-essential
  sudo cpan EV
  sudo cpan AnyEvent::XMPP
  sudo cpan AnyEvent::Watchdog
  mkdir -p ~/src && (cd ~/src && git clone git://github.com/stephanealnet/ccnq2.0.git)


* On the API server:

  # The API server is the one that pushes HTTP request into the XMPP bus.
  # sudo cpan CCNQ::HTTPD  # Actually it's too broken.

* On the manager server:

  # The manager server is the one that takes generic Requests and splices them into per-server Activities.
  # It uses CouchDB to store the Requests & Activities.

  # CouchDB 0.9.x or above is required, but is not present in Debian/Lenny.

  # First compile the latest release of Erlang
  #    sudo aptitude install ncurses-dev
  #    cd ~/src && wget http://erlang.org/download/otp_src_R13B02-1.tar.gz
  #    tar xzf otp_src_R13B02-1.tar.gz
  #    cd otp_src_R13B02*
  #    ./configure
  #    make && sudo make install
  aptitude install erlang/testing

  # Then install CouchDB itself
  sudo aptitude install build-essential spidermonkey-bin libmozjs-dev libicu-dev libcurl4-openssl-dev
  cd ~/src && wget http://www.apache.org/dist/couchdb/0.10.0/apache-couchdb-0.10.0.tar.gz
  tar xzf apache-couchdb-0.10.0.tar.gz
  cd apache-couchdb-0.10.0*
  ./configure
  make && sudo make install

  sudo adduser --gecos '' --disabled-password couchdb
  sudo chown couchdb /usr/local/var/*/couchdb

  # Our client also needs this module:
  sudo cpan AnyEvent::CouchDB

* On the proxy servers:

  # Install OpenSIPS (note: we provide "amd64"-type Debian packages only)
  cd ~/src
  sudo aptitude install libmysqlclient15off mysql-client
  wget http://opensource.sotelips.net/~stephane/osip-1.5.3-tls/opensips_1.5.3-0_amd64.deb
  wget http://opensource.sotelips.net/~stephane/osip-1.5.3-tls/opensips-mysql-module_1.5.3-0_amd64.deb
  sudo dpkg -i opensips_1.5.3-0_amd64.deb
  sudo dpkg -i opensips-mysql-module_1.5.3-0_amd64.deb

  # Continue installation for the proxy:
  sudo cpan AnyEvent::DBI

  sudo aptitude install mysql-server
  # (leave the MySQL root password empty)
  # Also I do:
  sudo aptitude --purge remove portmap fam
  sudo aptitude install postfix


  # Install MediaProxy dispatcher (if using MediaProxy)
  sudo aptitude install python python-support libnetfilter-conntrack1 python-cjson python-twisted-core python-twisted-names python-zopeinterface
  # Versions required for mediaproxy-common include python-application (>= 1.1.5) and python-gnutls (>= 1.1.8) which are not in Debian/Lenny
  sudo aptitude install python-application/testing python-gnutls/testing
  cd ~/src
  wget http://opensource.sotelips.net/~stephane/mp-2.3.8/mediaproxy-common_2.3.8_amd64.deb
  wget http://opensource.sotelips.net/~stephane/mp-2.3.8/mediaproxy-dispatcher_2.3.8_all.deb
  sudo dpkg -i mediaproxy-common_2.3.8_amd64.deb
  sudo dpkg -i mediaproxy-dispatcher_2.3.8_all.deb

  # Also make sure that the user which will be running xmpp_agent.pl is a member of the "opensips" group.
  # (This is required so that xmpp_agent.pl can get access to the OpenSIPS FIFO.)
  # The following command adds the current user to group "opensips":
  sudo adduser `whoami` opensips

* On the SBC servers:

  # Install FreeSwitch

  sudo aptitude -y install unixodbc libasound2 libcurl3 libvorbis0a
  sudo aptitude -y install libcrypt-ssleay-perl  # for CNAM

  cd ~/src
  wget http://opensource.sotelips.net/~stephane/fs-1.0.4/freeswitch_1.0.4-1_amd64.deb
  wget http://opensource.sotelips.net/~stephane/fs-1.0.4/freeswitch-lang-en_1.0.4-1_amd64.deb
  wget http://opensource.sotelips.net/~stephane/fs-1.0.4/freeswitch-perl_1.0.4-1_amd64.deb
  # wget http://opensource.sotelips.net/~stephane/fs-1.0.4/freeswitch-lua_1.0.4-1_amd64.deb
  # wget http://opensource.sotelips.net/~stephane/fs-1.0.4/freeswitch-sounds-en-us-callie-8000_1.0.4-1_amd64.deb
  # wget http://opensource.sotelips.net/~stephane/fs-1.0.4/freeswitch-codec-passthru-g729_1.0.4-1_amd64.deb


  sudo dpkg -i freeswitch_1.0.4-1_amd64.deb
  sudo dpkg -i freeswitch-lang-en_1.0.4-1_amd64.deb
  sudo dpkg -i freeswitch-perl_1.0.4-1_amd64.deb   # CNAM, currently
  # sudo dpkg -i freeswitch-lua_1.0.4-1_amd64.deb
  # sudo dpkg -i freeswitch-sounds-en-us-callie-8000_1.0.4-1_amd64.deb
  # sudo dpkg -i freeswitch-codec-passthru-g729_1.0.4-1_amd64.deb

  # Important: move the original configuration files out of the way.
  sudo mv /opt/freeswitch/conf /opt/freeswitch/conf.orig

  # Also make sure that the user which will be running xmpp_agent.pl is a member of the "daemon" group.
  # (This is required so that xmpp_agent.pl can get access to the FreeSwitch CLI and FIFO.)
  # The following command adds the current user to group "daemon":
  sudo adduser `whoami` daemon

* Finally:

  # Install /etc/ccn/cookie
  sudo mkdir /etc/ccn
  hexdump -C /dev/urandom | head -1 | md5sum | sudo tee /etc/ccn/cookie > /dev/null

  sudo tail -f /var/log/syslog &

  # Then, many times:
  sudo $HOME/src/ccnq2.0/common/bin/upgrade.pl

  # Monitor syslog during the execution of the scripts to know what to do next.

* On the proxies:

  # Part of the syslog information (during upgrade.pl) ask to run some MySQL commands to initialize the database.
  # Typically these are equivalent to:
  sudo mysql <<SQL
    CREATE DATABASE opensips;
    CONNECT opensips;
    CREATE USER opensips IDENTIFIED BY 'opensips';
    GRANT ALL ON opensips.* TO opensips;
SQL
  # Run this AFTER upgrade.pl, otherwise /etc/opensips/opensips.sql will not be present.
  sudo /bin/sh -c 'mysql opensips < /etc/opensips/opensips.sql'


* On B2BUAs:

  # ACL updates
  As appropriate, review
  b2bua/client-sbc-config/freeswitch/conf/autoload_configs/acl.client-sbc-config.conf.xml
  to add your proxies' IP addresses.

* On upgrades:

  cd ~/src/ccnq2.0
  git pull

  # Install the updated modules
  cd common/perllib && perl Makefile.PL && make && make test && make install

  # Upgrade the configuration(s) as needed
  sudo $HOME/src/ccnq2.0/common/bin/upgrade.pl

* Using the manager process (this will be rewritten once we have a proper installer):

  # The connection to the jabber server(s) is done using the xmpp_agent.pl script:

  cd ~/src/ccnq2.0/common/bin
  ./xmpp_agent.pl

  # Please monitor /var/log/syslog for the connection information:
  #   Creating XMPP Connection for <host_name>@<domain_name>/.../... using password <password>
  # and add a user <host_name> with password <password> in your jabber server.

  # Try again. This time the user should connect properly.
  # Then run xmpp_agent.pl in the background.

  # The "API" and "Manager" servers are functions inside the xmpp_agent tool which
  # are automatically started on "api" and "manager" nodes.

  # IMPORTANT: The user which is running xmpp_agent.pl MUST BE a member of the following groups:
  #
  #     opensips   (for access to the OpenSIPS FIFO)
  #     daemon     (for access to the FreeSwitch CLI / FIFO)
  #
