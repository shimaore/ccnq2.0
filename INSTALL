# Copyright (C) 2009-2010  Stephane Alnet
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# These instructions are for Debian/Lenny.


# Here I am assuming you use sudo to gain root access.

# * Update apt's sources.list to import the "testing" distribution
#   (needed for some packages on the API and MediaProxy servers):

  cat <<'EOT' | sudo tee -a /etc/apt/sources.list > /dev/null
# Testing packages required by CCNQ2.0 for Erlang/CouchDB, MediaProxy
deb     http://ftp.us.debian.org/debian/   testing main contrib
EOT
  cat <<'EOT' | sudo tee /etc/apt/preferences > /dev/null
# Install Debian/Lenny packages by default
Package: *
Pin: release a=lenny
Pin-Priority: 700

# Although testing is available, do not attempt to automatically upgrade to it.
Package: *
Pin: release a=testing
Pin-Priority: -1
EOT

  sudo aptitude update
  sudo aptitude -y dist-upgrade


# * Note: I've noticed that Lenny installs a /etc/rsyslog.conf which creates /var/log/user.log, but it never gets cleaned up.
# I recommend:

  sudo mv /etc/rsyslog.conf /etc/rsyslog.conf.bak
  cat <<'EOT' | sudo tee /etc/rsyslog.conf >/dev/null
$ModLoad imuxsock # provides support for local system logging
$ModLoad imklog   # provides kernel logging support (previously done by rklogd)
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
$FileOwner root
$FileGroup adm
$FileCreateMode 0640
$DirCreateMode 0755
auth,authpriv.*                 /var/log/auth.log
*.*;auth,authpriv.none          -/var/log/syslog
EOT
  sudo /etc/init.d/rsyslog reload

# * Note: for high performance, the directory /opt/freeswitch/db must be
# in memory.
   grep '/opt/freeswitch/db' /etc/fstab || \
   echo 'tmpfs /opt/freeswitch/db tmpfs defaults 0 0' | sudo tee -a /etc/fstab >/dev/null


# * On all servers, install the program:
#
  sudo aptitude update
  sudo aptitude -y install monit libjson-perl libnet-libidn-perl libauthen-sasl-perl libxml-writer-perl libwww-perl libyaml-perl libexpat-dev liblogger-syslog-perl libio-stringy-perl git-core libnet-ssleay-perl build-essential libmodule-install-perl libuniversal-require-perl
  # Required for AnyEvent::DBI
  sudo aptitude -y install libdbi-perl
  # Required for AnyEvent::CouchDB
  sudo aptitude -y install liburi-perl libjson-xs-perl libdata-dump-streamer-perl libio-all-perl libdata-dump-perl libtest-deep-perl
  # Now add non-Debian Perl modules.

  # Manual instructions moved to doc/INSTALL.perl

  # -- You need to install:
  #  File::ShareDir # Obsolete version in Debian Lenny or testing
  #  EV AnyEvent::XMPP AnyEvent::Watchdog constant::defer Test::More
  #  AnyEvent::DBI AnyEvent::HTTP CouchDB::View AnyEvent::CouchDB
  #  Async::Interrupt Guard JSON JSON::XS Net::SSLeay

  # ------ Equivalent (from our servers): ------------
  (mkdir /tmp/perl && cd /tmp/perl && \
    wget http://opensource.sotelips.net/~stephane/perl/all.tar.gz && \
    tar xzvf all.tar.gz && \
    for file in *.deb; do echo "Installing $file"; sudo dpkg -i $file; done && \
    rm *.deb all.tar.gz && cd && rmdir /tmp/perl && echo "Done." )

  # Download the latest release of the code
  mkdir -p ~/src && (cd ~/src && git clone git://github.com/stephanealnet/ccnq2.0.git)

  # Build the Perl modules and install them
  (cd ~/src/ccnq2.0/common/perllib && perl Makefile.PL && make && make test && sudo make install)

  # On the web portal server, you should also do:
  # (cd ~/src/ccnq2.0/portal/perllib && perl Makefile.PL && make && make test && sudo make install)
  # .. but I haven't built the dependencies yet, so you should wait on that.

# * On the API server:
#
  # The API server is the one that pushes HTTP request into the XMPP bus.

# * On the manager server:

  # The manager server is the one that takes generic Requests and splices them into per-server Activities.
  # It uses CouchDB to store the Requests & Activities.

  # CouchDB 0.9.x or above is required, but is not present in Debian/Lenny.

  # First compile the latest release of Erlang (R13B02 or above)
  aptitude install erlang/testing

  # Then install CouchDB itself
  sudo aptitude install build-essential spidermonkey-bin libmozjs-dev libicu-dev libcurl4-openssl-dev
  COUCHDB=0.10.1
  cd ~/src && wget http://www.apache.org/dist/couchdb/$COUCHDB/apache-couchdb-$COUCHDB.tar.gz
  tar xzf apache-couchdb-$COUCHDB.tar.gz
  cd apache-couchdb-$COUCHDB
  ./configure
  make && sudo make install
  # In /usr/local/etc/couchdb/local.ini, replace the line that reads:
  #    ;loglevel = warn
  # with
  #    loglevel = error
  # to avoid filling the disk with log messages.
  sed -i -e 's/^;loglevel = warn.*$/loglevel = error/' /usr/local/etc/couchdb/local.ini

  sudo adduser --gecos '' --disabled-password couchdb
  sudo chown couchdb /usr/local/var/*/couchdb

# * On the Portal server(s):

  sudo aptitude install memcached
  cpan Cache::Memcached

  # On the web portal server, you should also do:
  # (cd ~/src/ccnq2.0/portal/perllib && perl Makefile.PL && make && make test && sudo make install)
  # .. but I haven't built the dependencies yet, so you should wait on that.

# * On the proxy servers:

  # Install OpenSIPS (note: we provide "amd64"-type Debian packages only)
  cd ~/src
  sudo aptitude install libmysqlclient15off mysql-client
  wget http://opensource.sotelips.net/~stephane/osip-1.5.3-tls/opensips_1.5.3-0_amd64.deb
  wget http://opensource.sotelips.net/~stephane/osip-1.5.3-tls/opensips-mysql-module_1.5.3-0_amd64.deb
  sudo dpkg -i opensips_1.5.3-0_amd64.deb
  sudo dpkg -i opensips-mysql-module_1.5.3-0_amd64.deb

  sudo aptitude install mysql-server
  # (leave the MySQL root password empty)
  # Also I do:
  sudo aptitude --purge remove portmap fam
  sudo aptitude install postfix


  # Install MediaProxy dispatcher (if using MediaProxy)
  sudo aptitude install python python-support libnetfilter-conntrack1 python-cjson python-twisted-core python-twisted-names python-zopeinterface
  # Versions required for mediaproxy-common include python-application (>= 1.1.5) and python-gnutls (>= 1.1.8) which are not in Debian/Lenny
  sudo aptitude install python-application/testing python-gnutls/testing
  cd ~/src
  wget http://opensource.sotelips.net/~stephane/mp-2.3.8/mediaproxy-common_2.3.8_amd64.deb
  wget http://opensource.sotelips.net/~stephane/mp-2.3.8/mediaproxy-dispatcher_2.3.8_all.deb
  sudo dpkg -i mediaproxy-common_2.3.8_amd64.deb
  sudo dpkg -i mediaproxy-dispatcher_2.3.8_all.deb

  # Also make sure that the user which will be running xmpp_agent.pl is a member of the "opensips" group.
  # (This is required so that xmpp_agent.pl can get access to the OpenSIPS FIFO.)
  # The following command adds the current user to group "opensips":
  sudo adduser `whoami` opensips

# * On the SBC servers:

  # Install FreeSwitch

  sudo aptitude -y install unixodbc libasound2 libcurl3 libvorbis0a
  sudo aptitude -y install libcrypt-ssleay-perl  # for CNAM

  cd ~/src
  wget http://opensource.sotelips.net/~stephane/fs-1.0.4/freeswitch_1.0.4-1_amd64.deb
  wget http://opensource.sotelips.net/~stephane/fs-1.0.4/freeswitch-lang-en_1.0.4-1_amd64.deb
  wget http://opensource.sotelips.net/~stephane/fs-1.0.4/freeswitch-perl_1.0.4-1_amd64.deb
  # wget http://opensource.sotelips.net/~stephane/fs-1.0.4/freeswitch-lua_1.0.4-1_amd64.deb
  # wget http://opensource.sotelips.net/~stephane/fs-1.0.4/freeswitch-sounds-en-us-callie-8000_1.0.4-1_amd64.deb
  # wget http://opensource.sotelips.net/~stephane/fs-1.0.4/freeswitch-codec-passthru-g729_1.0.4-1_amd64.deb


  sudo dpkg -i freeswitch_1.0.4-1_amd64.deb
  sudo dpkg -i freeswitch-lang-en_1.0.4-1_amd64.deb
  sudo dpkg -i freeswitch-perl_1.0.4-1_amd64.deb   # CNAM, currently
  # sudo dpkg -i freeswitch-lua_1.0.4-1_amd64.deb
  # sudo dpkg -i freeswitch-sounds-en-us-callie-8000_1.0.4-1_amd64.deb
  # sudo dpkg -i freeswitch-codec-passthru-g729_1.0.4-1_amd64.deb

  # Important: move the original configuration files out of the way.
  sudo mv /opt/freeswitch/conf /opt/freeswitch/conf.orig

  # Also make sure that the user which will be running xmpp_agent.pl is a member of the "daemon" group.
  # (This is required so that xmpp_agent.pl can get access to the FreeSwitch CLI and FIFO.)
  # The following command adds the current user to group "daemon":
  sudo adduser `whoami` daemon

# * Finally:

  # Install /etc/ccn/cookie
  sudo mkdir /etc/ccn
  hexdump -C /dev/urandom | head -1 | md5sum | sudo tee /etc/ccn/cookie > /dev/null

  # Monitor /var/log/syslog to see any errors.
  sudo tail -f /var/log/syslog &

  # Then run:
  sudo ccnq2_upgrade

  # Monitor syslog during the execution of the script to know what to do next.
  # If syslog shows no line containing the word "error" then you should be OK.

# * On the proxies:

  # Part of the syslog information (during ccnq2_upgrade) asks to run some MySQL commands to initialize the database.
  # Typically these are equivalent to:
  sudo mysql <<SQL
    CREATE DATABASE opensips;
    CONNECT opensips;
    CREATE USER opensips IDENTIFIED BY 'opensips';
    GRANT ALL ON opensips.* TO opensips;
SQL
  # Run this AFTER ccnq2_upgrade, otherwise /etc/opensips/opensips.sql will not be present.
  sudo /bin/sh -c 'mysql opensips < /etc/opensips/opensips.sql'


# * On B2BUAs:

  # ACL updates
  # As appropriate, review
  # b2bua/client-sbc-config/freeswitch/conf/autoload_configs/acl.client-sbc-config.conf.xml
  # to add your proxies' IP addresses.

# * On upgrades:

  cd ~/src/ccnq2.0
  git pull

  # Install the updated modules
  (cd ~/src/ccnq2.0/common/perllib && perl Makefile.PL && make && make test && sudo make install)

  # Upgrade the configuration(s) as needed
  sudo ccnq2_upgrade

# * Using the manager process (this will be rewritten once we have a proper installer):

  # The connection to the jabber server(s) is done using the xmpp_agent.pl script:

  ccnq2_xmpp_agent

  # Please monitor /var/log/syslog for the connection information:
  #   Creating XMPP Connection for <host_name>@<domain_name>/.../... using password <password>
  # and add a user <host_name> with password <password> in your jabber server.

  # Try again. This time the user should connect properly.
  ccnq2_xmpp_agent &

  # The "API" and "Manager" servers are functions inside the xmpp_agent tool which
  # are automatically started on "api" and "manager" nodes.

  # IMPORTANT: The user which is running xmpp_agent.pl MUST BE a member of the following groups:
  #
  #     opensips   (for access to the OpenSIPS FIFO)
  #     daemon     (for access to the FreeSwitch CLI / FIFO)
  #

  vi /etc/group

# * If you intent to use the "sip-traces" API:

  sudo aptitude install -t testing tshark
  (cd ~/src/ccnq2.0/contrib && sudo cp sip-traces/usr/sbin/sip-traces /usr/sbin && sudo chmod +x /usr/sbin/sip-traces)

  # Make sure dumpcap will work
  sudo groupadd -r wireshark
  sudo chgrp wireshark /usr/bin/dumpcap
  # Set the "s" bit for root, but restrict to group wireshark
  sudo chmod 04750 /usr/bin/dumpcap
  sudo adduser `whoami` wireshark

  /usr/sbin/sip-traces eth0 &
  /usr/sbin/sip-traces eth1 &

  # (I'm working on a proper installer and /etc/init.d script.)

# These instructions last tested on 2010/03/03
